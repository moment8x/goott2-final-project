<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  	<mapper namespace="com.project.mappers.listMapper">
  	<resultMap type="com.project.vodto.kjy.ProductCategories" id="productCategoriesResultMap">
  		<result property="categoryKey" column="category_key"/>
  		<result property="categoryName" column="category_name"/>
  	</resultMap>
  	
  	<resultMap type="com.project.vodto.kjy.Products" id="productsResultMap">
  		<result property="productId" column="product_id"/>
  		<result property="productName" column="product_name"/>
  		<result property="consumerPrice" column="consumer_price"/>
  		<result property="supplyPrice" column="supply_price"/>
  		<result property="sellingPrice" column="selling_price"/>
  		<result property="isbn" column="isbn"/>
  		<result property="productImage" column="product_image"/>
  		<result property="productInfoImage" column="product_info_image"/>
  		<result property="authorTranslator" column="author_translator"/>
  		<result property="originalAuthor" column="original_author"/>
  		<result property="illustrator" column="illustrator"/>
  		<result property="publisher" column="publisher"/>
  		<result property="publicationDate" column="publication_date"/>
  		<result property="pageCount" column="page_count"/>
  		<result property="size" column="size"/>
  		<result property="totalVolume" column="total_volume"/>
  		<result property="authorIntroduction" column="author_introduction"/>
  		<result property="introductionIntro" column="introduction_intro"/>
  		<result property="introductionDetail" column="introduction_detail"/>
  		<result property="tableOfContents" column="table_of_contents"/>
  		<result property="notificationSubscription" column="notification_subscription"/>
  		<result property="bestSellerStatus" column="best_seller_status"/>
  		<result property="categoryKey" column="category_key"/>
  		<result property="currentQuantity" column="current_quantity"/>
  	</resultMap>
  
  
  	<!-- 리스트 목록 가져오기 -->
  	<select id="selectProductCategories" resultMap="productCategoriesResultMap">
  		select * from product_categories where category_key like CONCAT(#{key}, "__") 
  	</select>
  	
  	<!-- 리스트 상품정보 가져오기 -->
  	<select id="selectProductForList" resultMap="productsResultMap">
  		SELECT p.*, (SELECT i.product_image FROM product_images i WHERE i.product_id = p.product_id LIMIT 1) AS product_image FROM products p where p.category_key like CONCAT(#{key}, "%") order by p.${sortBy} limit #{startRowIndex}, #{viewProductPerPage};
  	</select>
  	
  	<!-- 키로 해당 카테고리 정보 가져오기 -->
 	<select id="selectProductCategoriesOne" resultMap="productCategoriesResultMap">
  		SELECT * FROM product_categories WHERE category_key = #{key}
  	</select>
  	
  	<!-- 전체 상품 갯수 조회 -->
  	<select id="selectProductCount" resultType="int">
  		select count(*) from products where category_key like CONCAT(#{key}, "%")
  	</select>
  	
  	<select id="selectBestSellerFromId" resultMap="productsResultMap">
  		select p.*, (SELECT i.product_image FROM product_images i WHERE i.product_id = p.product_id LIMIT 1) AS product_image from products p where p.best_seller_status = 1 and p.category_key like CONCAT(#{key}, "%") limit 10
  	</select>
  	<select id="selectBestSeller" resultMap="productsResultMap">
  		select p.*, (SELECT i.product_image FROM product_images i WHERE i.product_id = p.product_id LIMIT 1) AS product_image from products p where p.best_seller_status = 1
  	</select>
  	
  	<select id="selectProductById" resultMap="productsResultMap">
  		select p.*, (SELECT i.product_image FROM product_images i WHERE i.product_id = p.product_id LIMIT 1) AS product_image from products p where p.product_id = #{id}
  	</select>
  	
  	<select id="selectProductsSearching" resultMap="productsResultMap">
  		select p.*, (SELECT i.product_image FROM product_images i WHERE i.product_id = p.product_id LIMIT 1) AS product_image from products p where p.product_name like #{value} order by ${sort} limit #{startRowIndex}, #{endRowIndex}
  	</select>
 
 	<resultMap type="com.project.vodto.kjy.SearchVO" id="searchVo">
 		<result property="categoryName" column="category_name"/>
 		<result property="categoryKey" column="category_key"/>
 		<result property="categoryCount" column="category_count"/>
 	</resultMap>
 
  	<select id="selectSearchProductsCategories" resultMap="searchVo">
  		SELECT (SELECT c.category_name FROM product_categories c WHERE c.category_key = p.category_key) AS category_name, (select c.category_key from product_categories c where c.category_key = p.category_key) as category_key , COUNT(*) AS category_count FROM products p WHERE p.product_name LIKE #{value} group by category_name order by category_count desc
  	</select>
  	
  	<select id="selectSearchPrductsKey" resultType="String">
  		select category_key from products where product_name like CONCAT("%", #{val} ,"%")
  	</select>
  	
  	<select id="selectProductsSearchingWithFilter" resultMap="productsResultMap">
  		select p.*, (SELECT i.product_image FROM product_images i WHERE i.product_id = p.product_id LIMIT 1) AS product_image from products p where p.product_name like CONCAT("%", #{val}, "%") 
  			<if test="checkedList  != null and checkedList.size() > 0">
  			and p.category_key in
  				<foreach item="checked" collection="checkedList" separator=","  open="(" close=")">
		  			#{checked}
		  		</foreach>
  			</if>
  			<if test="checkedLang != null and checkedLang.size() > 0">
  				and (
  				<foreach item="lang" collection="checkedLang" separator="or">
  					p.category_key like CONCAT(#{lang}, "%")
  				</foreach>
  				)
  			</if>
  			order by ${sort} limit #{startRowIndex}, #{endRowIndex}
  	</select>
  	
  	<select id="selectSearchProductCount" resultType="int">
  		select count(*) from products where product_name like CONCAT("%", #{val}, "%")
  		<if test="checkedList  != null and checkedList.size() > 0">
  			and category_key in
  				<foreach item="checked" collection="checkedList" separator=","  open="(" close=")">
		  			#{checked}
		  		</foreach>
  			</if>
  			<if test="checkedLang != null and checkedLang.size() > 0">
  				and (
  				<foreach item="lang" collection="checkedLang" separator="or">
  					category_key like CONCAT(#{lang}, "%")
  				</foreach>
  				)
  			</if>
  	</select>
  	
  	<select id="selectNewPrducts" resultMap="ProductsForList">
  		select (select i.product_image from product_images i where i.product_id = p.product_id limit 1)as product_image, p.product_id, p.product_name, p.publisher, p.consumer_price, p.selling_price, p.publication_date, (select r.rating from ratings r where p.product_id = r.product_id) as rating from products p where p.publication_date <![CDATA[ <= ]]> curdate() group by p.product_id order by publication_date desc limit 5;
  	</select>
  	
  	<resultMap type="com.project.vodto.kjy.ProductsForList" id="ProductsForList">
 		<result property="productId" column="product_id"/>
 		<result property="productImage" column="product_image"/>
 		<result property="productName" column="product_name"/>
 		<result property="consumerPrice" column="consumer_price"/>
 		<result property="sellingPrice" column="selling_price"/>
 		<result property="rating" column="rating"/>
 		<result property="participationCount" column="participation_count"/>
 		<result property="counts" column="counts"/>
 		<result property="publisher" column="publisher"/>
 	</resultMap>
  	
  	<select id="selectProductsOrderBySellings" resultMap="ProductsForList">
  		select (select i.product_image from product_images i where i.product_id = p.product_id limit 1)as product_image, (select p.product_id from products p where p.product_id = d.product_id)as product_id, p.product_name,p.publisher ,p.consumer_price ,p.selling_price,(select r.rating from ratings r where p.product_id = r.product_id) as rating, (select r.participation_count from ratings r where p.product_id = r.product_id) as participation_count  ,count(d.product_id) as counts from detailed_order_items d left join products p on d.product_id = p.product_id group by d.product_id order by counts desc limit 5
  	</select>
  	<select id="selectProductsOrderByCart" resultMap="ProductsForList">
  		select (select i.product_image from product_images i where i.product_id = s.product_id limit 1)as product_image,s.product_id, p.product_name,p.publisher, p.consumer_price ,p.selling_price, (select r.rating from ratings r where r.product_id = s.product_id) as rating, (select r.participation_count from ratings r where s.product_id = r.product_id) as participation_count, count(s.product_id)as counts from shopping_cart s left join products p on s.product_id = p.product_id group by s.product_id order by counts limit 5
  	</select>
  	<select id="selectProductsOrderByRating" resultMap="ProductsForList">
  		select r.product_id, r.rating, r.participation_count, p.product_name,p.publisher, p.selling_price, p.consumer_price, (select i.product_image from product_images i where i.product_id = p.product_id limit 1)as product_image from ratings r left join products p on r.product_id = p.product_id order by rating desc limit 5
  	</select>
  	<select id="selectProductsOrderBySellingsInLang" resultMap="ProductsForList">
  		select (select i.product_image from product_images i where i.product_id = p.product_id limit 1)as product_image, (select p.product_id from products p where p.product_id = d.product_id)as product_id, p.product_name,p.publisher ,p.consumer_price ,p.selling_price,(select r.rating from ratings r where p.product_id = r.product_id) as rating, (select r.participation_count from ratings r where p.product_id = r.product_id) as participation_count  ,count(d.product_id) as counts from detailed_order_items d left join products p on d.product_id = p.product_id where p.category_key like CONCAT(#{lang}, "%") group by d.product_id order by counts desc limit 10 
  	</select>
  	<select id="selectNewPrductsInLang"  resultMap="ProductsForList">
  		select (select i.product_image from product_images i where i.product_id = p.product_id limit 1)as product_image, p.product_id, p.publication_date , p.product_name, p.publisher, p.consumer_price, p.selling_price, p.publication_date, (select r.rating from ratings r where p.product_id = r.product_id) as rating from products p where p.category_key like CONCAT(#{lang}, "%") and p.publication_date <![CDATA[ <= ]]> curdate() group by p.product_id order by publication_date desc limit 5;
  	</select>
  </mapper>