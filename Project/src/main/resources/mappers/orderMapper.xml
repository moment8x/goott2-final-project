<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ksh.mappers.OrderMapper">
   <insert id="insertNewPayment">
      INSERT INTO payments (payment_number, non_order_no,
      payment_method, total_amount, shipping_fee, used_points, used_reward,
      actual_payment_amount, payment_time, card_name, card_number)
      VALUES(#{payment_number}, #{non_order_no}, #{payment_method},
      #{total_amount}, #{shipping_fee},
      #{used_points}, #{used_reward},
      #{actual_payment_amount},
      #{payment_time},#{card_name},#{card_number})
   </insert>

   <insert id="insertDetailOrderItem" parameterType="java.util.Map">
      INSERT INTO detailed_order_items
      (non_order_no, product_id,
      product_price)
      VALUES
      <foreach item="item" index="index" collection="list"
         separator=",">
         (#{item.non_order_no}, #{item.product_id},
         #{item.product_price})
      </foreach>
   </insert>

   <insert id="insertNewOrderHistory">
      INSERT INTO non_order_history (non_order_no,
      non_member_id, non_recipient_name, non_recipient_phone_number,
      non_zip_code,
      non_shipping_address, non_detailed_shipping_adress,
      non_delivery_message,
      non_password, non_email, non_delivery_status)
      VALUES(#{non_order_no},
      #{non_member_id}, #{recipient_name},
      #{recipient_phone_number},
      #{zip_code}, #{shipping_address},
      #{detailed_shipping_address},
      #{delivery_message}, #{non_password},
      #{non_email},
      #{delivery_status})
   </insert>

   <select id="getPaymentDetail" resultType="map">
      select p.non_order_no,
      p.total_amount,
      p.actual_payment_amount, d.product_id, d.product_price
      ,
      n.recipient_name, n.recipient_phone_number, n.shipping_address
      from
      payments p inner join detailed_order_items d inner join
      non_order_history n
      on p.non_order_no = d.non_order_no and
      p.non_order_no = n.non_order_no
      where p.non_order_no = #{non_order_no};
   </select>

  

   <resultMap id="result" type="com.project.vodto.OrderInfo">
   	
      <result property="product_id" column="product_id" />
      <result property="product_name" column="product_name" />
      <result property="product_image" column="product_image" />
      <result property="category_key" column="category_key" />
      <result property="current_quantity" column="current_quantity" />
      <result property="selling_price" column="selling_price" />

   </resultMap>

   <select id="getProductInfo" parameterType="com.project.vodto.OrderInfo"
      resultMap="result">
      select p.product_id, p.product_name, i.product_image, p.category_key, p.current_quantity,
      p.selling_price from products p inner join product_images i on
      p.product_id = i.product_id where p.product_id = #{product_id} limit
      1;
   </select>
   



   <insert id="saveBankTransfer">
      INSERT INTO bank_transfers (non_order_no,
      payment_number, payer_name, amount_to_pay)
      VALUES(#{non_order_no},
      #{payment_number}, #{recipient_name}, #{amount_to_pay})
   </insert>


</mapper>