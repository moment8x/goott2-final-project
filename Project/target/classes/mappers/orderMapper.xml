<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ksh.mappers.OrderMapper">
   <insert id="insertNewPayment">
      INSERT INTO payments (payment_number, non_order_no,
      payment_method, total_amount, shipping_fee, used_points, used_reward,
      actual_payment_amount, payment_time, card_name, card_number)
      VALUES(#{paymentNumber}, #{nonOrderNo}, #{paymentMethod},
      #{totalAmount}, #{shippingFee},
      #{usedPoints}, #{usedReward},
      #{actualPaymentAmount},
      #{paymentTime},#{cardName},#{cardNumber})
   </insert>

   <insert id="insertDetailOrderItem" parameterType="java.util.Map">
      INSERT INTO detailed_order_items
      (non_order_no, product_id,
      product_price)
      VALUES
      <foreach item="item" index="index" collection="list"
         separator=",">
         (#{item.nonOrderNo}, #{item.productId},
         #{item.productPrice})
      </foreach>
   </insert>

   <insert id="insertNewOrderHistory">
      INSERT INTO non_order_history (non_order_no,
      non_member_id, non_recipient_name, non_recipient_phone_number,
      non_zip_code,
      non_shipping_address, non_detailed_shipping_adress,
      non_delivery_message,
      non_password, non_email, non_delivery_status)
      VALUES(#{nonOrderNo},
      #{nonMemberId}, #{recipientName},
      #{recipientPhoneNumber},
      #{zipCode}, #{shippingAddress},
      #{detailedShippingAddress},
      #{deliveryMessage}, #{nonPassword},
      #{nonEmail},
      #{deliveryStatus})
   </insert>

   <select id="getPaymentDetail" resultType="map">
      select p.non_order_no,
      p.total_amount,
      p.actual_payment_amount, d.product_id, d.product_price
      ,
      n.recipient_name, n.recipient_phone_number, n.shipping_address
      from
      payments p inner join detailed_order_items d inner join
      non_order_history n
      on p.non_order_no = d.non_order_no and
      p.non_order_no = n.non_order_no
      where p.non_order_no = #{nonOrderNo};
   </select>



   <resultMap id="result" type="com.project.vodto.OrderInfo">

      <result property="productId" column="product_id" />
      <result property="productName" column="product_name" />
      <result property="productImage" column="product_image" />
      <result property="categoryKey" column="category_key" />
      <result property="currentQuantity" column="current_quantity" />
      <result property="sellingPrice" column="selling_price" />

   </resultMap>

   <select id="getProductInfo"
      parameterType="com.project.vodto.OrderInfo" resultMap="result">
      select p.product_id, p.product_name, i.product_image, p.category_key,
      p.current_quantity,
      p.selling_price from products p inner join product_images i on
      p.product_id = i.product_id where p.product_id = #{productId} limit
      1;
   </select>

   <insert id="saveBankTransfer">
      INSERT INTO bank_transfers (non_order_no,
      payment_number, payer_name, amount_to_pay)
      VALUES(#{nonOrderNo},
      #{paymentNumber}, #{recipientName}, #{amountToPay})
   </insert>

   <select id="getShippingAddr"
      resultType="com.project.vodto.ShippingAddress">
      select * from shipping_address where member_id =
      #{memberId}
   </select>

   <select id="getCouponInfos"
      resultType="com.project.vodto.CouponInfos">
      select l.member_id, l.coupon_number, l.obtained_date, l.used_date,
      l.expiration_date, c.coupon_name, c.discount_method, c.
      discount_amount
      from coupon_logs l inner join coupons c on l.coupon_number =
      c.coupon_number where member_id = #{memberId};
   </select>
   
   <select id="getCategoryKey" resultType="String">
   select category_key from coupon_categories where coupon_number = #{couponNumber};
   </select>
   

</mapper>